name: release

on:
  push:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # autodoc analyses the code and docstrings by introspection after importing the modules.
      # For importing to work, we have to make sure that your modules can be found by Sphinx and
      # that dependencies can be resolved.
      - name: Setup Machine for releasing documentation
        uses: snapchat/gigl/.github/actions/setup-python-tools@main
        with:
            install_dev_deps: "true"
            setup_gcloud: "true"
            gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
            workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
            gcp_service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
      # We also make gigl available w/ editable install `-e` so that autodoc can find it.
      - name: Install necessary doc dependencies
        run: |
          python -m pip install --upgrade build

      - name: Build Binary Distribution
        run: (cd python && python -m build)

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: python/dist/

  publish:
    name: Publish to TestPyPi ðŸš€
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: release
    permissions:
      id-token: write
    steps:
      - name: Download distribution
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution ðŸ“¦ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
