# Based on https://github.com/Snapchat/GiGL/blob/v0.0.4/examples/link_prediction/configs/e2e_hom_cora_sup_task_config.yaml
# This config is used to run homogeneous CORA supervised training and inference using in memory GiGL SGS. This can be run with `make run_api_test`.
graphMetadata:
  edgeTypes:
  - dstNodeType: paper
    relation: cites
    srcNodeType: paper
  nodeTypes:
  - paper
datasetConfig:
  dataPreprocessorConfig:
    dataPreprocessorConfigClsPath: gigl.src.mocking.mocking_assets.passthrough_preprocessor_config_for_mocked_assets.PassthroughPreprocessorConfigForMockedAssets
    dataPreprocessorArgs:
      # This argument is specific for the `PassthroughPreprocessorConfigForMockedAssets` preprocessor to indicate which dataset we should be using
      mocked_dataset_name: 'cora_homogeneous_node_anchor_edge_features_user_defined_labels'
trainerConfig:
  trainerArgs:
    # Example argument to trainer
    log_every_n_batch: "50" # Frequency in which we log batch information
    num_neighbors: "[10, 10]" # Fanout per hop, specified as a string representation of a list for the homogeneous use case
  command: python -m api_test_training
inferencerConfig:
  inferencerArgs:
    # Example argument to inferencer
    log_every_n_batch: "50" # Frequency in which we log batch information
    num_neighbors: "[10, 10]" # Fanout per hop, specified as a string representation of a list for the homogeneous use case
  inferenceBatchSize: 512
  command: python -m api_test_inference
sharedConfig:
  shouldSkipAutomaticTempAssetCleanup: false
  shouldSkipInference: false
  # Model Evaluation is currently only supported for tabularized SGS GiGL pipelines. This will soon be added for in-mem SGS GiGL pipelines.
  shouldSkipModelEvaluation: true
taskMetadata:
  nodeAnchorBasedLinkPredictionTaskMetadata:
    supervisionEdgeTypes:
    - dstNodeType: paper
      relation: cites
      srcNodeType: paper
featureFlags:
  should_run_glt_backend: 'True'
  data_preprocessor_num_shards: '2'
