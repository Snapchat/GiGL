# Based on gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/frozen_gbml_config.yaml
graphMetadata:
  condensedEdgeTypeMap:
    '0':
      dstNodeType: story
      relation: to
      srcNodeType: user
    '1':
      dstNodeType: user
      relation: to
      srcNodeType: story
  condensedNodeTypeMap:
    '0': user
    '1': story
  edgeTypes:
  - dstNodeType: story
    relation: to
    srcNodeType: user
  - dstNodeType: user
    relation: to
    srcNodeType: story
  nodeTypes:
  - user
  - story
inferencerConfig:
  # unused
  inferencerArgs:
    # Commands also get passed into main
    # Use the torch distributed env variables set up by VAI.
    local_saved_model: "False"
  command: python -m examples.tutorial.KDD_2025.heterogeneous_inference
sharedConfig:
  datasetMetadata:
    nodeAnchorBasedLinkPredictionDataset:
      testMainDataUri: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/split_generator/test/main_samples/samples/
      testNodeTypeToRandomNegativeDataUri:
        story: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/split_generator/test/random_negatives/story/neighborhoods/
      trainMainDataUri: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/split_generator/train/main_samples/samples/
      trainNodeTypeToRandomNegativeDataUri:
        story: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/split_generator/train/random_negatives/story/neighborhoods/
      valMainDataUri: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/split_generator/val/main_samples/samples/
      valNodeTypeToRandomNegativeDataUri:
        story: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/split_generator/val/random_negatives/story/neighborhoods/
  flattenedGraphMetadata:
    nodeAnchorBasedLinkPredictionOutput:
      nodeTypeToRandomNegativeTfrecordUriPrefix:
        story: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/subgraph_sampler/node_anchor_based_link_prediction/random_negative_rooted_neighborhood_samples/story/samples/
        user: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/subgraph_sampler/node_anchor_based_link_prediction/random_negative_rooted_neighborhood_samples/user/samples/
      tfrecordUriPrefix: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/subgraph_sampler/node_anchor_based_link_prediction/node_anchor_based_link_prediction_samples/samples/
  inferenceMetadata:
    nodeTypeToInferencerOutputInfoMap:
      story:
        embeddingsPath: external-snap-ci-github-gigl.public_gigl.embeddings_story_toy_graph_heterogeneous_node_anchor_lp_2024-07-15--21-30-07-UTC
      user:
        embeddingsPath: external-snap-ci-github-gigl.public_gigl.embeddings_user_toy_graph_heterogeneous_node_anchor_lp_2024-07-15--21-30-07-UTC
  postprocessedMetadata:
    postProcessorLogMetricsUri: gs://public-gigl/toy_graph_heterogeneous_node_anchor_lp/post_processor/post_processor_metrics.json
  preprocessedMetadataUri: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/data_preprocess/preprocessed_metadata.yaml
  trainedModelMetadata:
    evalMetricsUri: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/trainer/models/trainer_eval_metrics.json
    scriptedModelUri: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/trainer/models/scripted_model.pt
    tensorboardLogsUri: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/trainer/tensorboard_logs/
    trainedModelUri: gs://public-gigl/mocked_assets/2024-07-15--21-30-07-UTC/toy_graph_heterogeneous_node_anchor_lp/trainer/models/model.pt
taskMetadata:
  nodeAnchorBasedLinkPredictionTaskMetadata:
    supervisionEdgeTypes:
    - dstNodeType: story
      relation: to
      srcNodeType: user
trainerConfig:
  trainerArgs:
    # Setup splits for training.
    # These arguements are read by `build_dataset_from_task_config_uri`.
    ssl_positive_label_percentage: ".7"
    num_val: "0.3"
    num_test: "0.3"
    # Commands also get passed into main
    # Use the torch distributed env variables set up by VAI.
    local_saved_model: "False"
  command: python -m examples.tutorial.KDD_2025.heterogeneous_training
