# This config is used to run heterogeneous DBLP self-supervised training and inference using in memory GiGL SGS. This can be run with `make run_het_dblp_sup_test`.
graphMetadata:
  # We have 3 nodes types in the DBLP Dataset: author, paper, and term. We also have 3
  # edge types: author -> paper, paper -> author, and term -> paper
  edgeTypes:
  - dstNodeType: paper
    relation: to
    srcNodeType: author
  - dstNodeType: author
    relation: to
    srcNodeType: paper
  - dstNodeType: paper
    relation: to
    srcNodeType: term
  nodeTypes:
  - author
  - paper
  - term
taskMetadata:
  nodeAnchorBasedLinkPredictionTaskMetadata:
    # We aim to predict paper -> author links in the graph.
    supervisionEdgeTypes:
    - dstNodeType: author
      relation: to
      srcNodeType: paper
datasetConfig:
  dataPreprocessorConfig:
    dataPreprocessorConfigClsPath: gigl.src.mocking.mocking_assets.passthrough_preprocessor_config_for_mocked_assets.PassthroughPreprocessorConfigForMockedAssets
    dataPreprocessorArgs:
      # This argument is specific for the `PassthroughPreprocessorConfigForMockedAssets` preprocessor to indicate which dataset we should be using
      mocked_dataset_name: 'dblp_node_anchor_edge_features_lp'
trainerConfig:
  trainerArgs:
    # Example argument to trainer
    log_every_n_batch: "50"
    # The DBLP Dataset does not have specified labeled edges so we provide this field to indicate what
    # percentage of edges we should select as self-supervised labeled edges. Doing this randomly sets 5% as "labels".
    # Note that the current GiGL implementation does not remove these selected edges from the global set of edges, which may
    # have a slight negative impact on training specifically with self-supervised learning. This will improved on in the future.
    ssl_positive_label_percentage: "0.05"
  command: python -m examples.link_prediction.heterogeneous_training
inferencerConfig:
  inferencerArgs:
    # Example argument to inferencer
    log_every_n_batch: "50"
  inferenceBatchSize: 512
  command: python -m examples.link_prediction.heterogeneous_inference
sharedConfig:
  shouldSkipAutomaticTempAssetCleanup: false
  shouldSkipInference: false
  # Model Evaluation is currently only supported for tabularized SGS GiGL pipelines. This will soon be added for in-mem SGS GiGL pipelines.
  shouldSkipModelEvaluation: true
featureFlags:
  should_run_glt_backend: 'True'
